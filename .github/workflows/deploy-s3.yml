# Deploy the site to AWS S3 on a push to specific branches

name: Deploy S3

on:
  push:
    branches:
    - 'gcc'

env:
  NODE: 14
  PROD_DOMAIN: http://algorithm-publication-tool.s3-website.us-west-2.amazonaws.com/apt
  DEPLOY_BUCKET_PROD: algorithm-publication-tool
  DEPLOY_BUCKET_PROD_REGION: us-west-2
  SURGE_STAGING_DOMAIN: https://nasa-apt.surge.sh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE }}

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}

      - name: Cache dist
        uses: actions/cache@v2
        id: cache-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: Install
        run: yarn install

      - name: Build staging
        if: github.event.ref == 'refs/heads/develop'
        run: yarn stage

      - name: Build production
        if: github.event.ref == 'refs/heads/gcc'
        run: PUBLIC_URL="${{ env.PROD_DOMAIN }}" yarn build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}

      - name: Restore dist cache
        uses: actions/cache@v2
        id: cache-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: Use Node.js ${{ env.NODE }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE }}

      - name: Deploy Staging to Surge
        if: github.event.ref == 'refs/heads/develop'
        run: |
          cp ./dist/index.html ./dist/200.html
          yarn run surge ./dist ${{ env.SURGE_STAGING_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

      - name: Serve site from subpath
        if: github.event.ref == 'refs/heads/gcc'
        run: |
          mkdir deploy/
          mv dist deploy/apt
          cp deploy/apt/index.html deploy/index.html

      - name: Deploy to S3 Production
        if: github.event.ref == 'refs/heads/gcc'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ env.DEPLOY_BUCKET_PROD }}
          AWS_REGION: ${{ env.DEPLOY_BUCKET_PROD_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: ./deploy